apiVersion: v1
kind: ConfigMap
metadata:
  name: valkey-poc
data:
  valkey.conf: |
    cluster-enabled yes
    cluster-require-full-coverage no
    cluster-node-timeout 10000
    cluster-config-file /data/nodes.conf
    cluster-migration-barrier 1

    tls-port 6379
    port 0
    tls-cert-file /etc/valkey-cluster/tls/server.crt
    tls-key-file /etc/valkey-cluster/tls/server.key
    tls-ca-cert-file /etc/valkey-cluster/tls/ca_bundle.pem
    tls-auth-clients yes
    tls-cluster yes
    tls-replication yes

    save 60 100
    dbfilename dump.rdb
    dir /data

    appendonly yes
    appendfilename "appendonly.aof"
    appendfsync everysec              # Fsync policy: always, everysec, or no
    auto-aof-rewrite-percentage 100
    auto-aof-rewrite-min-size 64mb

---
apiVersion: v1
kind: Secret
metadata:
  name: valkey-poc
stringData:
  valkey-pass: myVeryStrongPass
type: Opaque


---
apiVersion: v1
kind: Service
metadata:
  annotations:
    prometheus.io/port: "9121"
    prometheus.io/scrape: "true"
  name: valkey-poc
spec:
  ports:
  - name: resp
    port: 6379
    protocol: TCP
    targetPort: 6379
  - name: prom
    port: 9121
    protocol: TCP
    targetPort: 9121
  selector:
    app: valkey-poc
  type: ClusterIP

---
apiVersion: v1
kind: Service
metadata:
  name: valkey-poc-head
spec:
  clusterIP: None
  ports:
  - name: resp
    port: 6379
    protocol: TCP
    targetPort: 6379
  - name: cluster-bus
    port: 16379
    protocol: TCP
    targetPort: 16379
  publishNotReadyAddresses: true
  selector:
    app: valkey-poc
  type: ClusterIP

---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: valkey-poc
spec:
  replicas: 6
  selector:
    matchLabels:
      app: valkey-poc
  serviceName: valkey-poc-head
  template:
    metadata:
      creationTimestamp: null
      labels:
        app: valkey-poc
        app.kubernetes.io/component: cache
        app.kubernetes.io/instance: valkey-poc
        app.kubernetes.io/name: valkey
        app.kubernetes.io/version: 8.1.1
    spec:
      initContainers:
      - name: init-valkey-sysctl
        image: busybox
        imagePullPolicy: IfNotPresent
        command:
        - sysctl
        - -w
        - net.core.somaxconn=10000
        securityContext:
          privileged: true
      containers:
      - name: valkey
        image: valkey/valkey-bundle:8.1.1-alpine
        imagePullPolicy: IfNotPresent
        args:
        - /data/valkey.conf
        env:
        - name: POD_IP
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: status.podIP
        - name: POD_NAME
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: metadata.name
        - name: VALKEY_DATA_DIR
          value: /data
        - name: VALKEY_CLUSTER_PASS
          valueFrom:
            secretKeyRef:
              name: valkey-poc
              key: valkey-cluster-pass  # TBD - to define this as protected
        - name: VALKEY_EXTRA_FLAGS
          value: --masterauth $(VALKEY_CLUSTER_PASS) --cluster-announce-ip $(POD_NAME).$(CLUSTER_SUFFIX)
        ports:
        - containerPort: 6379
          name: resp
          protocol: TCP
        - containerPort: 16379
          name: cluster-bus
          protocol: TCP
        resources:
          limits:
            cpu: "1"
            memory: 1Gi
          requests:
            cpu: 200m
            memory: 256Mi
        volumeMounts:
        - name: conf
          mountPath: /data/valkey.conf
          subPath: valkey.conf
        - name: valkey-poc-data
          mountPath: /data
        - name: tls-volume
          mountPath: "/etc/valkey-cluster/tls"
          readOnly: true
        - name: tmp-volume
          mountPath: /tmp
      - name: valkey-operator-sidecar
        image: ghcr.io/valkeyoperatorsidecar
        imagePullPolicy: IfNotPresent
        env:
        - name: VALKEY_USER      # TBD - to create de dedicated user for this with minimal rights
          value: valkey-admin    # TBD - to define this as protected
        - name: VALKEY_PASS
          valueFrom:
            secretKeyRef:
              name: valkey-poc
              key: valkey-pass   # TBD - to define this as protected
        ports:
        - name: grpc
          containerPort: 17369   # TBD - to define this
          protocol: TCP
        - name: liveness
          containerPort: 18369   # TBD - to define this
          protocol: TCP
        livenessProbe:
          httpGet:
            path: /healthz/live  # TBD - to define this
            port: liveness
          initialDelaySeconds: 30
          periodSeconds: 30
        readinessProbe:
          httpGet:
            path: /healthz/ready
            port: liveness
          initialDelaySeconds: 30
          periodSeconds: 30
        volumeMounts:
        - name: valkey-poc-data
          mountPath: /data
        - name: tmp-volume
          mountPath: /tmp
        - name: tls-volume
          mountPath: "/etc/valkey-cluster/tls"
          readOnly: true
        - name: mtls-volume
          mountPath: "/etc/valkey-cluster/mtls"
          readOnly: true
      - name: valkey-exporter
        image: oliver006/redis_exporter:v1.67.0-alpine
        imagePullPolicy: IfNotPresent
        env:
        - name: REDIS_ADDR
          value: redis://127.0.0.1:6379
        - name: REDIS_PASSWORD   # TBD - acl and dedicated ro user missing
          valueFrom:
            secretKeyRef:
              key: valkey-pass
              name: vlk-secret
        name: valkey-exporter
        ports:
        - containerPort: 9121
          name: exporter-port
          protocol: TCP
      terminationGracePeriodSeconds: 30
      volumes:
      - name: conf
        configMap:
          name: valkey-poc
          defaultMode: 493
      - name: tls-volume
        secret:
          secretName: valkey-poc-tls-secret
      - name: mtls-volume
        secret:
          secretName: valkey-poc-mtls-secret
      - name: tmp-volume
        emptyDir:
          sizeLimit: 1024Mi
  updateStrategy:
    type: OnDelete
  volumeClaimTemplates:
  - apiVersion: v1
    kind: PersistentVolumeClaim
    metadata:
      name: valkey-poc-data
    spec:
      accessModes:
      - ReadWriteOnce
      resources:
        requests:
          storage: 30Gi
      storageClassName: my-storage-class
      volumeMode: Filesystem